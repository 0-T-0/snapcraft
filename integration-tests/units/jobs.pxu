id: snapcraft/normal/no-yaml
plugin: shell
estimated_duration: 0.1
command:
    set -x
    OUTPUT=$(snapcraft pull)
    test $? = 1 || exit 1
    echo $OUTPUT | grep "Could not find snapcraft\.yaml\."

id: snapcraft/normal/assemble-no-meta
plugin: shell
estimated_duration: 0.3
command:
    set -x
    cp -rT $PLAINBOX_PROVIDER_DATA/assemble .
    OUTPUT=$(snapcraft assemble)
    test $? = 1 || exit 1
    echo $OUTPUT | grep "Missing snappy metadata file"

id: snapcraft/normal/assemble-meta-externally
plugin: shell
estimated_duration: 0.3
command:
    set -ex
    cp -rT $PLAINBOX_PROVIDER_DATA/assemble .
    # Test that as long as we have meta/ from *somewhere*, assemble doesn't
    # care where (and you don't need snappy-metadata to find it)
    snapcraft snap
    cp -r snappy snap/meta
    snapcraft assemble

id: snapcraft/normal/assemble-meta
plugin: shell
estimated_duration: 0.3
command:
    set -ex
    cp -rT $PLAINBOX_PROVIDER_DATA/assemble .
    echo "snappy-metadata: snappy" >> snapcraft.yaml
    snapcraft assemble
    export SNAP_APP_PATH=`pwd`/snap
    test "$(./snap/service-start)" = "service-start"
    test "$(./snap/service-stop)" = "service-stop"
    test "$(./snap/binary1)" = "binary1"
    test "$(./snap/binary2)" = "binary2"
    if ./snap/bin/not-wrapped; then
        exit 1
    fi

id: snapcraft/normal/local-source
plugin: shell
estimated_duration: 0.3
command:
    set -ex
    cp -rT $PLAINBOX_PROVIDER_DATA/local-source .
    snapcraft build
    test -e stamp-all
    test "$(readlink parts/make-project/build)" = "$(pwd)"
    snapcraft stage
    test -e stamp-install

id: snapcraft/normal/local-plugin
plugin: shell
estimated_duration: 0.3
command:
    set -ex
    cp -rT $PLAINBOX_PROVIDER_DATA/local-plugin .
    snapcraft snap
    test -e snap/build-stamp

id: snapcraft/normal/simple-make
plugin: shell
estimated_duration: 0.3
command:
    set -ex
    cp -rT $PLAINBOX_PROVIDER_DATA/simple-make .
    snapcraft snap
    test "$(./snap/bin/test)" = "Hello world"

id: snapcraft/normal/simple-cmake
plugin: shell
estimated_duration: 0.3
command:
    set -ex
    cp -rT $PLAINBOX_PROVIDER_DATA/simple-cmake .
    snapcraft snap
    test "$(./snap/bin/simple-cmake)" = "It's a CMake world"

id: snapcraft/normal/conflicts
plugin: shell
estimated_duration: 0.3
command:
    set -x
    cp -rT $PLAINBOX_PROVIDER_DATA/conflicts .
    OUTPUT=$(snapcraft stage)
    test $? = 1 || exit 1
    echo $OUTPUT | grep "Error: parts p1 and p2 have the following files in common: bin/test" # squished output by bash

id: snapcraft/normal/dependencies
plugin: shell
estimated_duration: 0.3
command:
    set -ex
    cp -rT $PLAINBOX_PROVIDER_DATA/dependencies .
    snapcraft snap
    test -x stage/bin/p3
    test -x snap/bin/p3
    test "$(snapcraft shell p3)" = 'p1
    p1
    p2'

id: snapcraft/normal/dependencies-circular
plugin: shell
estimated_duration: 0.3
command:
    set -x
    cp -rT $PLAINBOX_PROVIDER_DATA/dependencies .
    sed -i "s/p1:/p1:\n    after: [p3]/" snapcraft.yaml
    OUTPUT=$(snapcraft pull)
    test $? = 1 || exit 1
    echo $OUTPUT | grep -i "circular dependency"

id: snapcraft/normal/dependencies-fail
plugin: shell
estimated_duration: 0.3
command:
    set -x
    cp -rT $PLAINBOX_PROVIDER_DATA/dependencies .
    sed -i '/after/d' snapcraft.yaml
    snapcraft snap
    test $? = 1 || exit 1

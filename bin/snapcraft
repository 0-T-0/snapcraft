#!/usr/bin/python3
# -*- Mode:Python; indent-tabs-mode:t; tab-width:4 -*-

import os
import subprocess
import sys
import yaml

sys.path.append(os.path.abspath(os.path.join(__file__, "..", "..")))
import snapcraft
import snapcraft.plugin

cmds = sys.argv[1:]
if cmds == ["all"]:
	cmds = ["init", "pull", "build", "test", "stage", "deploy"]

data = yaml.load(open("craft.yaml", 'r'))

packagesToInstall = []
allParts = []

def loadPlugin(partName, pluginName, properties):
	global allParts, packagesToInstall

	pluginDir = os.path.abspath(os.path.join(__file__, "..", "..", "plugins"))

	part = snapcraft.plugin.Plugin(pluginDir, pluginName, partName, properties)
	if not part.isValid():
		print("Could not load part %s" % pluginName, file=sys.stderr)
		sys.exit(1)

	packagesToInstall += part.config.get('packages', [])
	allParts.append(part)
	return part

for partName in data["parts"]:
	properties = data["parts"][partName]

	pluginName = properties.get("plugin", partName)
	if "plugin" in properties: del properties["plugin"]

	loadPlugin(partName, pluginName, properties)

# Grab all required dependencies, if not already specified
newParts = allParts.copy()
while newParts:
	part = newParts.pop(0)
	requires = part.config.get('requires', [])
	for requiredPart in requires:
		alreadyPresent = False
		for p in allParts:
			if requiredPart in p.names():
				alreadyPresent = True
				break
		if not alreadyPresent:
			newParts.append(loadPlugin(requiredPart, requiredPart, {}))

# Now sort them
partsToSort = allParts.copy()
while partsToSort:
	part = partsToSort.pop(0)
	requires = part.config.get('requires', [])
	for requiredPart in requires:
		for i in range(len(allParts)):
			if requiredPart in allParts[i].names():
				allParts.insert(0, allParts.pop(i))
				break

# FIXME: don't do this step if we don't need to (to avoid sudo prompt)
if packagesToInstall:
	subprocess.call(['sudo', 'apt-get', 'install'] + packagesToInstall, stdout=subprocess.DEVNULL)

for part in allParts:
	for cmd in cmds:
		getattr(part, cmd)()
